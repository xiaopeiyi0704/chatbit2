{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.jsx", "../app/shopify.server.js", "../app/db.server.js", "../app/root.jsx", "../app/routes/qrcodes.$id.scan.jsx", "../app/models/QRCode.server.js", "../app/routes/app.qrcodes.$id.jsx", "../app/routes/app.additional.jsx", "../app/routes/qrcodes.$id.jsx", "../app/routes/app._index.jsx", "../app/routes/auth.login/route.jsx", "../app/routes/auth.login/error.server.jsx", "../app/routes/webhooks.jsx", "../app/routes/auth.$.jsx", "../app/routes/_index/route.jsx", "../app/routes/app.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport isbot from \"isbot\";\r\nimport { addDocumentResponseHeaders } from \"./shopify.server\";\r\n\r\nconst ABORT_DELAY = 5000;\r\n\r\nexport default async function handleRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext\r\n) {\r\n  addDocumentResponseHeaders(request, responseHeaders);\r\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\r\n    ? \"onAllReady\"\r\n    : \"onShellReady\";\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        [callbackName]: () => {\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n          pipe(body);\r\n        },\r\n        onShellError(error) {\r\n          reject(error);\r\n        },\r\n        onError(error) {\r\n          responseStatusCode = 500;\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import \"@shopify/shopify-app-remix/adapters/node\";\r\nimport {\r\n  AppDistribution,\r\n  DeliveryMethod,\r\n  shopifyApp,\r\n  LATEST_API_VERSION,\r\n} from \"@shopify/shopify-app-remix/server\";\r\nimport { PrismaSessionStorage } from \"@shopify/shopify-app-session-storage-prisma\";\r\nimport { restResources } from \"@shopify/shopify-api/rest/admin/2023-10\";\r\nimport prisma from \"./db.server\";\r\n\r\nconst shopify = shopifyApp({\r\n  apiKey: process.env.SHOPIFY_API_KEY,\r\n  apiSecretKey: process.env.SHOPIFY_API_SECRET || \"\",\r\n  apiVersion: LATEST_API_VERSION,\r\n  scopes: process.env.SCOPES?.split(\",\"),\r\n  appUrl: process.env.SHOPIFY_APP_URL || \"\",\r\n  authPathPrefix: \"/auth\",\r\n  sessionStorage: new PrismaSessionStorage(prisma),\r\n  distribution: AppDistribution.AppStore,\r\n  restResources,\r\n  webhooks: {\r\n    APP_UNINSTALLED: {\r\n      deliveryMethod: DeliveryMethod.Http,\r\n      callbackUrl: \"/webhooks\",\r\n    },\r\n  },\r\n  hooks: {\r\n    afterAuth: async ({ session }) => {\r\n      shopify.registerWebhooks({ session });\r\n    },\r\n  },\r\n  future: {\r\n    v3_webhookAdminContext: true,\r\n    v3_authenticatePublic: true,\r\n  },\r\n  ...(process.env.SHOP_CUSTOM_DOMAIN\r\n    ? { customShopDomains: [process.env.SHOP_CUSTOM_DOMAIN] }\r\n    : {}),\r\n});\r\n\r\nexport default shopify;\r\nexport const apiVersion = LATEST_API_VERSION;\r\nexport const addDocumentResponseHeaders = shopify.addDocumentResponseHeaders;\r\nexport const authenticate = shopify.authenticate;\r\nexport const unauthenticated = shopify.unauthenticated;\r\nexport const login = shopify.login;\r\nexport const registerWebhooks = shopify.registerWebhooks;\r\nexport const sessionStorage = shopify.sessionStorage;\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prisma = global.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  if (!global.prisma) {\r\n    global.prisma = new PrismaClient();\r\n  }\r\n}\r\n\r\nexport default prisma;\r\n", "import {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <html>\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <LiveReload />\r\n        <Scripts />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import { redirect } from \"@remix-run/node\";\r\nimport invariant from \"tiny-invariant\";\r\nimport db from \"../db.server\";\r\n\r\nimport { getDestinationUrl } from \"../models/QRCode.server\";\r\n\r\nexport const loader = async ({ params }) => {\r\n  invariant(params.id, \"Could not find QR code destination\");\r\n\r\n  const id = Number(params.id);\r\n  const qrCode = await db.qRCode.findFirst({ where: { id } });\r\n\r\n  invariant(qrCode, \"Could not find QR code destination\");\r\n\r\n  await db.qRCode.update({\r\n    where: { id },\r\n    data: { scans: { increment: 1 } },\r\n  });\r\n\r\n  return redirect(getDestinationUrl(qrCode));\r\n};\r\n", "//------------Peiyi comments--------------\r\n// this file for manipulating QR code data\r\nimport qrcode from \"qrcode\";\r\nimport invariant from \"tiny-invariant\";\r\nimport db from \"../db.server\";\r\n\r\n// param1: qrcode ID\r\n// param2: graphql client for graphql api call\r\n// based on qrcode id  to find the qr code data from DB\r\n// use the qrcode to create qrcode image dynamically and provide it to the product(get by graphql) the qrcode associated\r\nexport async function getQRCode(id, graphql) {\r\n  //db is database client\r\n  const qrCode = await db.qRCode.findFirst({ where: { id } });\r\n\r\n  if (!qrCode) {\r\n    return null;\r\n  }\r\n\r\n  return supplementQRCode(qrCode, graphql);\r\n}\r\n\r\nexport async function getQRCodes(shop, graphql) {\r\n  const qrCodes = await db.qRCode.findMany({\r\n    where: { shop },\r\n    orderBy: { id: \"desc\" },\r\n  });\r\n\r\n  if (qrCodes.length === 0) return [];\r\n\r\n  return Promise.all(\r\n    qrCodes.map((qrCode) => supplementQRCode(qrCode, graphql))\r\n  );\r\n}\r\n\r\n// param1: qrcode ID\r\n// use qrcode pakage we installed to create qrcode image dynamically\r\nexport function getQRCodeImage(id) {\r\n  const url = new URL(`/qrcodes/${id}/scan`, process.env.SHOPIFY_APP_URL);\r\n  return qrcode.toDataURL(url.href);\r\n}\r\n\r\n// param1: qrcode obj\r\n// based on qrcode obj to get its destination url after scanning\r\nexport function getDestinationUrl(qrCode) {\r\n  if (qrCode.destination === \"product\") {\r\n    return `https://${qrCode.shop}/products/${qrCode.productHandle}`;\r\n  }\r\n\r\n  const match = /gid:\\/\\/shopify\\/ProductVariant\\/([0-9]+)/.exec(\r\n    qrCode.productVariantId\r\n  );\r\n  invariant(match, \"Unrecognized product variant ID\");\r\n\r\n  return `https://${qrCode.shop}/cart/${match[1]}:1`;\r\n}\r\n\r\n// return an qrcode object with additional info(product)\r\nasync function supplementQRCode(qrCode, graphql) {\r\n  const qrCodeImagePromise = getQRCodeImage(qrCode.id);\r\n\r\n  const response = await graphql(\r\n    `\r\n      query supplementQRCode($id: ID!) {\r\n        product(id: $id) {\r\n          title\r\n          images(first: 1) {\r\n            nodes {\r\n              altText\r\n              url\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    {\r\n      variables: {\r\n        id: qrCode.productId,\r\n      },\r\n    }\r\n  );\r\n\r\n  const {\r\n    data: { product },\r\n  } = await response.json();\r\n\r\n  return {\r\n    ...qrCode,\r\n    productDeleted: !product?.title,\r\n    productTitle: product?.title,\r\n    productImage: product?.images?.nodes[0]?.url,\r\n    productAlt: product?.images?.nodes[0]?.altText,\r\n    destinationUrl: getDestinationUrl(qrCode),\r\n    image: await qrCodeImagePromise,\r\n  };\r\n}\r\n\r\nexport function validateQRCode(data) {\r\n  const errors = {};\r\n\r\n  if (!data.title) {\r\n    errors.title = \"Title is required\";\r\n  }\r\n\r\n  if (!data.productId) {\r\n    errors.productId = \"Product is required\";\r\n  }\r\n\r\n  if (!data.destination) {\r\n    errors.destination = \"Destination is required\";\r\n  }\r\n\r\n  if (Object.keys(errors).length) {\r\n    return errors;\r\n  }\r\n}\r\n", "import { useState } from \"react\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport {\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigation,\r\n  useSubmit,\r\n  useNavigate,\r\n} from \"@remix-run/react\";\r\nimport { authenticate } from \"../shopify.server\";\r\nimport {\r\n  Card,\r\n  Bleed,\r\n  Button,\r\n  ChoiceList,\r\n  Divider,\r\n  EmptyState,\r\n  InlineStack,\r\n  InlineError,\r\n  Layout,\r\n  Page,\r\n  Text,\r\n  TextField,\r\n  Thumbnail,\r\n  BlockStack,\r\n  PageActions,\r\n} from \"@shopify/polaris\";\r\nimport { ImageMajor } from \"@shopify/polaris-icons\";\r\n\r\nimport db from \"../db.server\";\r\nimport { getQRCode, validateQRCode } from \"../models/QRCode.server\";\r\n\r\n// remix function - get data for router\r\nexport async function loader({ request, params }) {\r\n  const { admin } = await authenticate.admin(request);\r\n\r\n  if (params.id === \"new\") {\r\n    return json({\r\n      destination: \"product\",\r\n      title: \"\",\r\n    });\r\n  }\r\n\r\n  return json(await getQRCode(Number(params.id), admin.graphql));\r\n}\r\n\r\n// remix function - update data\r\nexport async function action({ request, params }) {\r\n  const { session } = await authenticate.admin(request);\r\n  const { shop } = session;\r\n\r\n  /** @type {any} */\r\n  const data = {\r\n    ...Object.fromEntries(await request.formData()),\r\n    shop,\r\n  };\r\n\r\n  if (data.action === \"delete\") {\r\n    await db.qRCode.delete({ where: { id: Number(params.id) } });\r\n    return redirect(\"/app\");\r\n  }\r\n\r\n  const errors = validateQRCode(data);\r\n\r\n  if (errors) {\r\n    return json({ errors }, { status: 422 });\r\n  }\r\n\r\n  const qrCode =\r\n    params.id === \"new\"\r\n      ? await db.qRCode.create({ data })\r\n      : await db.qRCode.update({ where: { id: Number(params.id) }, data });\r\n\r\n  return redirect(`/app/qrcodes/${qrCode.id}`);\r\n}\r\n\r\nexport default function QRCodeForm() {\r\n  const errors = useActionData()?.errors || {};\r\n\r\n  const qrCode = useLoaderData();\r\n  const [formState, setFormState] = useState(qrCode);\r\n  const [cleanFormState, setCleanFormState] = useState(qrCode);\r\n  const isDirty = JSON.stringify(formState) !== JSON.stringify(cleanFormState);\r\n\r\n  const nav = useNavigation();\r\n  const isSaving =\r\n    nav.state === \"submitting\" && nav.formData?.get(\"action\") !== \"delete\";\r\n  const isDeleting =\r\n    nav.state === \"submitting\" && nav.formData?.get(\"action\") === \"delete\";\r\n\r\n  const navigate = useNavigate();\r\n\r\n  async function selectProduct() {\r\n    const products = await window.shopify.resourcePicker({\r\n      type: \"product\",\r\n      action: \"select\", // customized action verb, either 'select' or 'add',\r\n    });\r\n\r\n    if (products) {\r\n      const { images, id, variants, title, handle } = products[0];\r\n\r\n      setFormState({\r\n        ...formState,\r\n        productId: id,\r\n        productVariantId: variants[0].id,\r\n        productTitle: title,\r\n        productHandle: handle,\r\n        productAlt: images[0]?.altText,\r\n        productImage: images[0]?.originalSrc,\r\n      });\r\n    }\r\n  }\r\n\r\n  const submit = useSubmit();\r\n  function handleSave() {\r\n    const data = {\r\n      title: formState.title,\r\n      productId: formState.productId || \"\",\r\n      productVariantId: formState.productVariantId || \"\",\r\n      productHandle: formState.productHandle || \"\",\r\n      destination: formState.destination,\r\n    };\r\n\r\n    setCleanFormState({ ...formState });\r\n    submit(data, { method: \"post\" });\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <ui-title-bar title={qrCode.id ? \"Edit QR code\" : \"Create new QR code\"}>\r\n        <button variant=\"breadcrumb\" onClick={() => navigate(\"/app\")}>\r\n          QR codes\r\n        </button>\r\n      </ui-title-bar>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <BlockStack gap=\"500\">\r\n            <Card>\r\n              <BlockStack gap=\"500\">\r\n                <Text as={\"h2\"} variant=\"headingLg\">\r\n                  Title\r\n                </Text>\r\n                <TextField\r\n                  id=\"title\"\r\n                  helpText=\"Only store staff can see this title\"\r\n                  label=\"title\"\r\n                  labelHidden\r\n                  autoComplete=\"off\"\r\n                  value={formState.title}\r\n                  onChange={(title) => setFormState({ ...formState, title })}\r\n                  error={errors.title}\r\n                />\r\n              </BlockStack>\r\n            </Card>\r\n            <Card>\r\n              <BlockStack gap=\"500\">\r\n                <InlineStack align=\"space-between\">\r\n                  <Text as={\"h2\"} variant=\"headingLg\">\r\n                    Product\r\n                  </Text>\r\n                  {formState.productId ? (\r\n                    <Button variant=\"plain\" onClick={selectProduct}>\r\n                      Change product\r\n                    </Button>\r\n                  ) : null}\r\n                </InlineStack>\r\n                {formState.productId ? (\r\n                  <InlineStack blockAlign=\"center\" gap=\"500\">\r\n                    <Thumbnail\r\n                      source={formState.productImage || ImageMajor}\r\n                      alt={formState.productAlt}\r\n                    />\r\n                    <Text as=\"span\" variant=\"headingMd\" fontWeight=\"semibold\">\r\n                      {formState.productTitle}\r\n                    </Text>\r\n                  </InlineStack>\r\n                ) : (\r\n                  <BlockStack gap=\"200\">\r\n                    <Button onClick={selectProduct} id=\"select-product\">\r\n                      Select product\r\n                    </Button>\r\n                    {errors.productId ? (\r\n                      <InlineError\r\n                        message={errors.productId}\r\n                        fieldID=\"myFieldID\"\r\n                      />\r\n                    ) : null}\r\n                  </BlockStack>\r\n                )}\r\n                <Bleed marginInlineStart=\"200\" marginInlineEnd=\"200\">\r\n                  <Divider />\r\n                </Bleed>\r\n                <InlineStack gap=\"500\" align=\"space-between\" blockAlign=\"start\">\r\n                  <ChoiceList\r\n                    title=\"Scan destination\"\r\n                    choices={[\r\n                      { label: \"Link to product page\", value: \"product\" },\r\n                      {\r\n                        label: \"Link to checkout page with product in the cart\",\r\n                        value: \"cart\",\r\n                      },\r\n                    ]}\r\n                    selected={[formState.destination]}\r\n                    onChange={(destination) =>\r\n                      setFormState({\r\n                        ...formState,\r\n                        destination: destination[0],\r\n                      })\r\n                    }\r\n                    error={errors.destination}\r\n                  />\r\n                  {qrCode.destinationUrl ? (\r\n                    <Button\r\n                      variant=\"plain\"\r\n                      url={qrCode.destinationUrl}\r\n                      target=\"_blank\"\r\n                    >\r\n                      Go to destination URL\r\n                    </Button>\r\n                  ) : null}\r\n                </InlineStack>\r\n              </BlockStack>\r\n            </Card>\r\n          </BlockStack>\r\n        </Layout.Section>\r\n        <Layout.Section variant=\"oneThird\">\r\n          <Card>\r\n            <Text as={\"h2\"} variant=\"headingLg\">\r\n              QR code\r\n            </Text>\r\n            {qrCode ? (\r\n              <EmptyState image={qrCode.image} imageContained={true} />\r\n            ) : (\r\n              <EmptyState image=\"\">\r\n                Your QR code will appear here after you save\r\n              </EmptyState>\r\n            )}\r\n            <BlockStack gap=\"300\">\r\n              <Button\r\n                disabled={!qrCode?.image}\r\n                url={qrCode?.image}\r\n                download\r\n                variant=\"primary\"\r\n              >\r\n                Download\r\n              </Button>\r\n              <Button\r\n                disabled={!qrCode.id}\r\n                url={`/qrcodes/${qrCode.id}`}\r\n                target=\"_blank\"\r\n              >\r\n                Go to public URL\r\n              </Button>\r\n            </BlockStack>\r\n          </Card>\r\n        </Layout.Section>\r\n        <Layout.Section>\r\n          <PageActions\r\n            secondaryActions={[\r\n              {\r\n                content: \"Delete\",\r\n                loading: isDeleting,\r\n                disabled: !qrCode.id || !qrCode || isSaving || isDeleting,\r\n                destructive: true,\r\n                outline: true,\r\n                onAction: () =>\r\n                  submit({ action: \"delete\" }, { method: \"post\" }),\r\n              },\r\n            ]}\r\n            primaryAction={{\r\n              content: \"Save\",\r\n              loading: isSaving,\r\n              disabled: !isDirty || isSaving || isDeleting,\r\n              onAction: handleSave,\r\n            }}\r\n          />\r\n        </Layout.Section>\r\n      </Layout>\r\n    </Page>\r\n  );\r\n}\r\n", "import {\r\n  Box,\r\n  Card,\r\n  Layout,\r\n  Link,\r\n  List,\r\n  Page,\r\n  Text,\r\n  BlockStack,\r\n} from \"@shopify/polaris\";\r\n\r\nexport default function AdditionalPage() {\r\n  return (\r\n    <Page>\r\n      <ui-title-bar title=\"Additional page\" />\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card>\r\n            <BlockStack gap=\"300\">\r\n              <Text as=\"p\" variant=\"bodyMd\">\r\n                The app template comes with an additional page which\r\n                demonstrates how to create multiple pages within app navigation\r\n                using{\" \"}\r\n                <Link\r\n                  url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\r\n                  target=\"_blank\"\r\n                  removeUnderline\r\n                >\r\n                  App Bridge\r\n                </Link>\r\n                .\r\n              </Text>\r\n              <Text as=\"p\" variant=\"bodyMd\">\r\n                To create your own page and have it show up in the app\r\n                navigation, add a page inside <Code>app/routes</Code>, and a\r\n                link to it in the <Code>&lt;ui-nav-menu&gt;</Code> component\r\n                found in <Code>app/routes/app.jsx</Code>.\r\n              </Text>\r\n            </BlockStack>\r\n          </Card>\r\n        </Layout.Section>\r\n        <Layout.Section variant=\"oneThird\">\r\n          <Card>\r\n            <BlockStack gap=\"200\">\r\n              <Text as=\"h2\" variant=\"headingMd\">\r\n                Resources\r\n              </Text>\r\n              <List>\r\n                <List.Item>\r\n                  <Link\r\n                    url=\"https://shopify.dev/docs/apps/design-guidelines/navigation#app-nav\"\r\n                    target=\"_blank\"\r\n                    removeUnderline\r\n                  >\r\n                    App nav best practices\r\n                  </Link>\r\n                </List.Item>\r\n              </List>\r\n            </BlockStack>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </Page>\r\n  );\r\n}\r\n\r\nfunction Code({ children }) {\r\n  return (\r\n    <Box\r\n      as=\"span\"\r\n      padding=\"025\"\r\n      paddingInlineStart=\"100\"\r\n      paddingInlineEnd=\"100\"\r\n      background=\"bg-surface-active\"\r\n      borderWidth=\"025\"\r\n      borderColor=\"border\"\r\n      borderRadius=\"100\"\r\n    >\r\n      <code>{children}</code>\r\n    </Box>\r\n  );\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\n\r\nimport db from \"../db.server\";\r\nimport { getQRCodeImage } from \"~/models/QRCode.server\";\r\n\r\nexport const loader = async ({ params }) => {\r\n  invariant(params.id, \"Could not find QR code destination\");\r\n\r\n  const id = Number(params.id);\r\n  const qrCode = await db.qRCode.findFirst({ where: { id } });\r\n\r\n  invariant(qrCode, \"Could not find QR code destination\");\r\n\r\n  return json({\r\n    title: qrCode.title,\r\n    image: await getQRCodeImage(id),\r\n  });\r\n};\r\n\r\nexport default function QRCode() {\r\n  const { image, title } = useLoaderData();\r\n\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      <img src={image} alt={`QR Code for product`} />\r\n    </>\r\n  );\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { useLoaderData, Link, useNavigate } from \"@remix-run/react\";\r\nimport { authenticate } from \"../shopify.server\";\r\nimport {\r\n  Card,\r\n  EmptyState,\r\n  Layout,\r\n  Page,\r\n  IndexTable,\r\n  Thumbnail,\r\n  Text,\r\n  Icon,\r\n  InlineStack,\r\n} from \"@shopify/polaris\";\r\n\r\nimport { getQRCodes } from \"../models/QRCode.server\";\r\nimport { DiamondAlertMajor, ImageMajor } from \"@shopify/polaris-icons\";\r\n\r\nexport async function loader({ request }) {\r\n  const { admin, session } = await authenticate.admin(request);\r\n  const qrCodes = await getQRCodes(session.shop, admin.graphql);\r\n\r\n  return json({\r\n    qrCodes,\r\n  });\r\n}\r\n\r\nconst EmptyQRCodeState = ({ onAction }) => (\r\n  <EmptyState\r\n    heading=\"Create unique QR codes for your product\"\r\n    action={{\r\n      content: \"Create QR code\",\r\n      onAction,\r\n    }}\r\n    image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\r\n  >\r\n    <p>Allow customers to scan codes and buy products using their phones.</p>\r\n  </EmptyState>\r\n);\r\n\r\nfunction truncate(str, { length = 25 } = {}) {\r\n  if (!str) return \"\";\r\n  if (str.length <= length) return str;\r\n  return str.slice(0, length) + \"\u2026\";\r\n}\r\n\r\nconst QRTable = ({ qrCodes }) => (\r\n  <IndexTable\r\n    resourceName={{\r\n      singular: \"QR code\",\r\n      plural: \"QR codes\",\r\n    }}\r\n    itemCount={qrCodes.length}\r\n    headings={[\r\n      { title: \"Thumbnail\", hidden: true },\r\n      { title: \"Title\" },\r\n      { title: \"Product\" },\r\n      { title: \"Date created\" },\r\n      { title: \"Scans\" },\r\n    ]}\r\n    selectable={false}\r\n  >\r\n    {qrCodes.map((qrCode) => (\r\n      <QRTableRow key={qrCode.id} qrCode={qrCode} />\r\n    ))}\r\n  </IndexTable>\r\n);\r\n\r\nconst QRTableRow = ({ qrCode }) => (\r\n  <IndexTable.Row id={qrCode.id} position={qrCode.id}>\r\n    <IndexTable.Cell>\r\n      <Thumbnail\r\n        source={qrCode.productImage || ImageMajor}\r\n        alt={qrCode.productTitle}\r\n        size=\"small\"\r\n      />\r\n    </IndexTable.Cell>\r\n    <IndexTable.Cell>\r\n      <Link to={`qrcodes/${qrCode.id}`}>{truncate(qrCode.title)}</Link>\r\n    </IndexTable.Cell>\r\n    <IndexTable.Cell>\r\n      {qrCode.productDeleted ? (\r\n        <InlineStack align=\"start\" gap=\"200\">\r\n          <span style={{ width: \"20px\" }}>\r\n            <Icon source={DiamondAlertMajor} tone=\"critical\" />\r\n          </span>\r\n          <Text tone=\"critical\" as=\"span\">\r\n            product has been deleted\r\n          </Text>\r\n        </InlineStack>\r\n      ) : (\r\n        truncate(qrCode.productTitle)\r\n      )}\r\n    </IndexTable.Cell>\r\n    <IndexTable.Cell>\r\n      {new Date(qrCode.createdAt).toDateString()}\r\n    </IndexTable.Cell>\r\n    <IndexTable.Cell>{qrCode.scans}</IndexTable.Cell>\r\n  </IndexTable.Row>\r\n);\r\n\r\nexport default function Index() {\r\n  const { qrCodes } = useLoaderData();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page>\r\n      <ui-title-bar title=\"QR codes\">\r\n        <button variant=\"primary\" onClick={() => navigate(\"/app/qrcodes/new\")}>\r\n          Create QR code\r\n        </button>\r\n      </ui-title-bar>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card padding=\"0\">\r\n            {qrCodes.length === 0 ? (\r\n              <EmptyQRCodeState onAction={() => navigate(\"qrcodes/new\")} />\r\n            ) : (\r\n              <QRTable qrCodes={qrCodes} />\r\n            )}\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n    </Page>\r\n  );\r\n}", "import { useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport {\n  AppProvider as PolarisAppProvider,\n  Button,\n  Card,\n  FormLayout,\n  Page,\n  Text,\n  TextField } from\n\"@shopify/polaris\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { login } from \"../../shopify.server\";\nimport { loginErrorMessage } from \"./error.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport const loader = async ({ request }) => {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors,\n    polarisTranslations: require(`@shopify/polaris/locales/en.json`)\n  });\n};\n\nexport const action = async ({ request }) => {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors\n  });\n};\n\nexport default function Auth() {\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  const [shop, setShop] = useState(\"\");\n  const { errors } = actionData || loaderData;\n\n  return (\n    <PolarisAppProvider i18n={loaderData.polarisTranslations}>\r\n      <Page>\r\n        <Card>\r\n          <Form method=\"post\">\r\n            <FormLayout>\r\n              <Text variant=\"headingMd\" as=\"h2\">\r\n                Log in\r\n              </Text>\r\n              <TextField\n                type=\"text\"\n                name=\"shop\"\n                label=\"Shop domain\"\n                helpText=\"example.myshopify.com\"\n                value={shop}\n                onChange={setShop}\n                autoComplete=\"on\"\n                error={errors.shop} />\n              \r\n              <Button submit>Log in</Button>\r\n            </FormLayout>\r\n          </Form>\r\n        </Card>\r\n      </Page>\r\n    </PolarisAppProvider>);\n\n}", "import { LoginErrorType } from \"@shopify/shopify-app-remix/server\";\r\n\r\nexport function loginErrorMessage(loginErrors) {\r\n  if (loginErrors?.shop === LoginErrorType.MissingShop) {\r\n    return { shop: \"Please enter your shop domain to log in\" };\r\n  } else if (loginErrors?.shop === LoginErrorType.InvalidShop) {\r\n    return { shop: \"Please enter a valid shop domain to log in\" };\r\n  }\r\n\r\n  return {};\r\n}\r\n", "import { authenticate } from \"../shopify.server\";\r\nimport db from \"../db.server\";\r\n\r\nexport const action = async ({ request }) => {\r\n  const { topic, shop, session, admin, payload } = await authenticate.webhook(\r\n    request\r\n  );\r\n\r\n  if (!admin) {\r\n    // The admin context isn't returned if the webhook fired after a shop was uninstalled.\r\n    throw new Response();\r\n  }\r\n\r\n  switch (topic) {\r\n    case \"APP_UNINSTALLED\":\r\n      if (session) {\r\n        await db.session.deleteMany({ where: { shop } });\r\n      }\r\n\r\n      break;\r\n    case \"CUSTOMERS_DATA_REQUEST\":\r\n    case \"CUSTOMERS_REDACT\":\r\n    case \"SHOP_REDACT\":\r\n    default:\r\n      throw new Response(\"Unhandled webhook topic\", { status: 404 });\r\n  }\r\n\r\n  throw new Response();\r\n};\r\n", "import { authenticate } from \"../shopify.server\";\r\n\r\nexport const loader = async ({ request }) => {\r\n  await authenticate.admin(request);\r\n\r\n  return null;\r\n};\r\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { login } from \"../../shopify.server\";\nimport indexStyles from \"./style.css\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: indexStyles }];\n\nexport const loader = async ({ request }) => {\n  const url = new URL(request.url);\n\n  if (url.searchParams.get(\"shop\")) {\n    throw redirect(`/app?${url.searchParams.toString()}`);\n  }\n\n  return json({ showForm: Boolean(login) });\n};\n\nexport default function App() {\n  const { showForm } = useLoaderData();\n\n  return (\n    <div className=\"index\">\r\n      <div className=\"content\">\r\n        <h1>A short heading about [your app]</h1>\r\n        <p>A tagline about [your app] that describes your value proposition.</p>\r\n        {showForm &&\n        <Form method=\"post\" action=\"/auth/login\">\r\n            <label>\r\n              <span>Shop domain</span>\r\n              <input type=\"text\" name=\"shop\" />\r\n              <span>e.g: my-shop-domain.myshopify.com</span>\r\n            </label>\r\n            <button type=\"submit\">Log in</button>\r\n          </Form>}\n        \r\n        <ul>\r\n          <li>\r\n            <strong>Product feature</strong>. Some detail about your feature and\r\n            its benefit to your customer.\r\n          </li>\r\n          <li>\r\n            <strong>Product feature</strong>. Some detail about your feature and\r\n            its benefit to your customer.\r\n          </li>\r\n          <li>\r\n            <strong>Product feature</strong>. Some detail about your feature and\r\n            its benefit to your customer.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>);\n\n}", "import { json } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData, useRouteError } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { boundary } from \"@shopify/shopify-app-remix/server\";\nimport { AppProvider } from \"@shopify/shopify-app-remix/react\";\nimport { authenticate } from \"../shopify.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport const loader = async ({ request }) => {\n  await authenticate.admin(request);\n\n  return json({ apiKey: process.env.SHOPIFY_API_KEY || \"\" });\n};\n\n// understand the structure of a project is very important! It is a contract and we should develop by following the contract\n//-------------Peiyi comment-----------\n// all about routes - route here means LAYOUT route\n// this file is main \"directory\" shows in this UI app \"directory\"/\"layout\", if the app needs multiple pages(consider as its subfiles/subroutes), you can list in the <link>\n// all files/pages starts with app.*, will be its(app) subroutes, which fall into this app \"directory\"\n// to visit this directory, use app/* e.g app.additional.jsx, if visit, it is https://.../app/additional e.g app.tada.jsx, go to ttps://.../app/tada\n// if just app/, then it use the default page  app._index.jsx\n// all files start with app* will go thru app route <Outlet /> below.\n// All exmples I use is about a url. But the route is a layout route, so it can be a url, also can be a section/segment of a page\n//-----------Peiyi comment end---------\n\n//-------------Peiyi comment-----------\n// each jsx file under /routes directory could be a route/url. e.g xx.jsx https://.../xxx\n// if you create a file name test.jsx. Based on the naming, it is not app route. it has its own route. https://.../test\n// it can have sub route too! if it need sub route then put <Outlet />  int test.jsx. then same rule that all files like test.* are its subroutes and use its <Outlet />\n//-----------Peiyi comment end---------\nexport default function App() {\n  const { apiKey } = useLoaderData();\n\n  return (\n    <AppProvider isEmbeddedApp apiKey={apiKey}>\r\n      <ui-nav-menu>\r\n        <Link to=\"/app\" rel=\"home\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/app/additional\">Additional page</Link>\r\n      </ui-nav-menu>\r\n      <Outlet />\r\n    </AppProvider>);\n\n}\n\n// Shopify needs Remix to catch some thrown responses, so that their headers are included in the response.\nexport function ErrorBoundary() {\n  return boundary.error(useRouteError());\n}\n\nexport const headers = (headersArgs) => {\n  return boundary.headers(headersArgs);\n};", "export default {'entry':{'module':'/build/entry.client-RYZ2QW2A.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-PIA4S3KN.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-SCYHWHZK.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-73V56GYN.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-4XQQM5QN.js','imports':['/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/app':{'id':'routes/app','parentId':'root','path':'app','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app-L3CYJIAA.js','imports':['/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-SU66BP3D.js','/build/_shared/chunk-MIBD2XN6.js','/build/_shared/chunk-OIJQMBPJ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':true},'routes/app._index':{'id':'routes/app._index','parentId':'routes/app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/app._index-XN4ZZEXH.js','imports':['/build/_shared/chunk-3EYAZZDZ.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/app.additional':{'id':'routes/app.additional','parentId':'routes/app','path':'additional','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.additional-2IXCB634.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/app.qrcodes.$id':{'id':'routes/app.qrcodes.$id','parentId':'routes/app','path':'qrcodes/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.qrcodes.$id-X7HDQKSI.js','imports':['/build/_shared/chunk-DXZPNPAJ.js','/build/_shared/chunk-3EYAZZDZ.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/auth.$':{'id':'routes/auth.$','parentId':'root','path':'auth/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.$-4B5WQABX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/auth.login':{'id':'routes/auth.login','parentId':'root','path':'auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.login-JQOXCZ44.js','imports':['/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-MIBD2XN6.js','/build/_shared/chunk-OIJQMBPJ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/qrcodes.$id':{'id':'routes/qrcodes.$id','parentId':'root','path':'qrcodes/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/qrcodes.$id-UVOFDVPI.js','imports':['/build/_shared/chunk-DXZPNPAJ.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/qrcodes.$id.scan':{'id':'routes/qrcodes.$id.scan','parentId':'routes/qrcodes.$id','path':'scan','index':undefined,'caseSensitive':undefined,'module':'/build/routes/qrcodes.$id.scan-2CY3SXY7.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/webhooks':{'id':'routes/webhooks','parentId':'root','path':'webhooks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks-JFV2P4HI.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false}},'version':'2ddf2bfd','hmr':{'runtime':'/build/_shared\\\\chunk-SCYHWHZK.js','timestamp':1701141820399},'url':'/build/manifest-2DDF2BFD.js'};", "\nimport * as entryServer from \"D:\\\\git-space\\\\chatbit2\\\\app\\\\entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/qrcodes.$id.scan.jsx\";\nimport * as route2 from \"./routes/app.qrcodes.$id.jsx\";\nimport * as route3 from \"./routes/app.additional.jsx\";\nimport * as route4 from \"./routes/qrcodes.$id.jsx\";\nimport * as route5 from \"./routes/app._index.jsx\";\nimport * as route6 from \"./routes/auth.login/route.jsx\";\nimport * as route7 from \"./routes/webhooks.jsx\";\nimport * as route8 from \"./routes/auth.$.jsx\";\nimport * as route9 from \"./routes/_index/route.jsx\";\nimport * as route10 from \"./routes/app.jsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/qrcodes.$id.scan\": {\n      id: \"routes/qrcodes.$id.scan\",\n      parentId: \"routes/qrcodes.$id\",\n      path: \"scan\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/app.qrcodes.$id\": {\n      id: \"routes/app.qrcodes.$id\",\n      parentId: \"routes/app\",\n      path: \"qrcodes/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/app.additional\": {\n      id: \"routes/app.additional\",\n      parentId: \"routes/app\",\n      path: \"additional\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/qrcodes.$id\": {\n      id: \"routes/qrcodes.$id\",\n      parentId: \"root\",\n      path: \"qrcodes/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/app._index\": {\n      id: \"routes/app._index\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/auth.login\": {\n      id: \"routes/auth.login\",\n      parentId: \"root\",\n      path: \"auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/webhooks\": {\n      id: \"routes/webhooks\",\n      parentId: \"root\",\n      path: \"webhooks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/auth.$\": {\n      id: \"routes/auth.$\",\n      parentId: \"root\",\n      path: \"auth/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/app\": {\n      id: \"routes/app\",\n      parentId: \"root\",\n      path: \"app\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };"],
  "mappings": "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",
  "names": ["import_server", "import_node", "isbot", "import_react", "import_jsx_dev_runtime", "import_node", "import_tiny_invariant", "qrcode", "invariant", "invariant", "loader", "import_react", "import_node", "import_jsx_dev_runtime", "loader", "import_polaris", "import_jsx_dev_runtime", "loader", "import_node", "import_tiny_invariant", "import_react", "import_jsx_dev_runtime", "loader", "invariant", "loader", "import_node", "import_react", "import_polaris", "import_polaris_icons", "import_jsx_dev_runtime", "loader", "action", "loader", "import_react", "import_node", "import_polaris", "import_server", "import_jsx_dev_runtime", "loader", "action", "PolarisAppProvider", "action", "action", "loader", "loader", "route_exports", "App", "links", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "App", "links", "loader", "import_node", "import_react", "import_server", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "route_exports"]
}
